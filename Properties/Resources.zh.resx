<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Kill Proof Smart Ping Menu" xml:space="preserve">
    <value>击杀证明智能标记菜单</value>
    <comment>Smart Ping Menu: Setting display name</comment>
  </data>
  <data name="Quick access to ping kill proofs." xml:space="preserve">
    <value>快速发送击杀证明</value>
    <comment>Smart Ping Menu: Setting description</comment>
  </data>
  <data name="KillProof" xml:space="preserve">
    <value>KillProof</value>
    <comment>Tab name</comment>
  </data>
  <data name="A new version of the KillProof module was found:" xml:space="preserve">
    <value>检测到一个新的KillProof插件版本</value>
    <comment>New version found</comment>
  </data>
  <data name="Show Smart Ping Menu" xml:space="preserve">
    <value>显示智能标记菜单</value>
    <comment>Toggle checkbox</comment>
  </data>
  <data name="Shows a menu on the top left corner of your screen which allows you to quickly access and ping your killproofs." xml:space="preserve">
    <value>在屏幕左上角添加一个允许快速标记击杀证明的菜单。</value>
    <comment>Smart Ping Menu: Checkbox description.</comment>
  </data>
  <data name="You started Blish HUD while Guild Wars 2 was already running." xml:space="preserve">
    <value>您开启 Blish HUD 时激战2已处在运行中。</value>
  </data>
  <data name="Refresh map to see your profile." xml:space="preserve">
    <value>刷新地图以查看你的信息</value>
  </data>
  <data name="Account Name or KillProof.me-ID:" xml:space="preserve">
    <value>账号名称或KillProof.me-ID:</value>
    <comment>Search box label.</comment>
  </data>
  <data name="Recent profiles:" xml:space="preserve">
    <value>最近的资料：</value>
  </data>
  <data name="Powered by www.killproof.me" xml:space="preserve">
    <value>由www.killproof.me出品</value>
  </data>
  <data name="Last Refresh:" xml:space="preserve">
    <value>最后一次更新：</value>
  </data>
  <data name="Update available! Visit killproof.me/addons" xml:space="preserve">
    <value>有新的更新！请前往KillProof.me/addons查看</value>
  </data>
  <data name="ID:" xml:space="preserve">
    <value>ID:</value>
    <comment>Identification short.</comment>
  </data>
  <data name="Not yet registered :(" xml:space="preserve">
    <value>还没有注册:(</value>
  </data>
  <data name="Visit www.killproof.me and allow us to record your KillProofs for you." xml:space="preserve">
    <value>请前往www.killproof.me并允许我们记录您的击杀证明。</value>
  </data>
  <data name="Please, share www.killproof.me with this player and help expand our database." xml:space="preserve">
    <value>恳请您将 www.killproof.me 与这位玩家分享以帮助我们完善数据库信息。</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>资料</value>
    <comment>Menu navigation title for back button.</comment>
  </data>
  <data name="Loading .." xml:space="preserve">
    <value>加载中...</value>
    <comment>Loading label</comment>
  </data>
  <data name="Total: {0} of {1} (killproof.me/{2})" xml:space="preserve">
    <value>总计：{0} 个 {1} (killproof.me/{2})</value>
    <comment>Smart Ping Menu: Chat message on right click send. Ex. &quot;Total 250 of Legendary Insight (profile link)&quot;</comment>
  </data>
  <data name="Everything" xml:space="preserve">
    <value>所有</value>
    <comment>Sorting</comment>
  </data>
  <data name="Titles" xml:space="preserve">
    <value>称号</value>
    <comment>Sorting</comment>
  </data>
  <data name="Tokens" xml:space="preserve">
    <value>代币</value>
    <comment>Sorting</comment>
  </data>
  <data name="Raid Titles" xml:space="preserve">
    <value>十人本称号</value>
    <comment>Sorting</comment>
  </data>
  <data name="Fractal Titles" xml:space="preserve">
    <value>碎层称号</value>
    <comment>Sorting</comment>
  </data>
  <data name="profile available" xml:space="preserve">
    <value>有资料可用</value>
  </data>
  <data name="No profile for &quot;{0}&quot; found :(" xml:space="preserve">
    <value>没有找到关于 &quot;{0}&quot; 的资料 :(</value>
    <comment>{0} will be swapped with account name.</comment>
  </data>
  <data name="Send To Chat\nLeft-Click: Only send code up to a stack&apos;s worth (250x). \nRight-Click: Send killproof.me total amount." xml:space="preserve">
    <value>添加至聊天窗口
左键：只添加每堆上限的链接（250x）。
右键：添加 killproof.me 上的总数。</value>
    <comment>Smart Ping Menu: Send Button tooltip.</comment>
  </data>
  <data name="Random token from selected wing when pressing Send To Chat.\nLeft-Click: Toggle\nRight-Click: Iterate wings" xml:space="preserve">
    <value>当选择发送时，从指定的Wing中随机选择一个代币发送。
左键：开启
右键：显示Wing</value>
    <comment>Smart Ping Menu: Randomize Button tooltip.</comment>
  </data>
</root>